---
import type { GetStaticPaths } from 'astro';
import Layout from '../../layouts/Layout.astro';
import HamburgerMenuNative from '../../components/HamburgerMenuNative.astro';
import ShareButton from '../../components/ShareButton';
import Footer from '../../components/Footer.astro';
import { fetchInitiatives, formatDate, formatNumber, isSigningActive, normalizeUrl, getRelatedInitiatives } from '../../lib/initiatives';
import type { Initiative } from '../../types/initiative';
import {
  ArrowLeftIcon,
  ArrowTopRightOnSquareIcon,
  CalendarIcon,
  UserGroupIcon,
  TagIcon,
  ClockIcon,
  LinkIcon,
  FlagIcon
} from '@heroicons/react/24/outline';
import fs from 'node:fs';
import { marked } from 'marked';

export const getStaticPaths: GetStaticPaths = async () => {
  const initiatives = await fetchInitiatives();

  return initiatives.map((initiative) => ({
    params: { id: initiative.id.toString() },
    props: { initiative }
  }));
};

interface Props {
  initiative: Initiative;
}

const { initiative } = Astro.props;

if (!initiative) {
  return Astro.redirect('/404');
}

const timeLineRaw = fs.readFileSync('data/time_line.jsonl', 'utf8');
const timeLineData = timeLineRaw.trim().split('\n').map(line => JSON.parse(line));
const initiativeTimeLine = timeLineData.filter(d => d.id === initiative.id);
const hasTimeLineData = initiativeTimeLine.length > 0;

// Ottieni tutte le iniziative per le correlate
const allInitiatives = await fetchInitiatives();
const relatedInitiatives = getRelatedInitiatives(initiative, allInitiatives, 3);

// Leggi il contenuto del quesito se esiste
let questionContent: string | null = null;
let questionHtml: string | null = null;
const questionPath = `data/quesiti/${initiative.id}.md`;
try {
  if (fs.existsSync(questionPath)) {
    questionContent = fs.readFileSync(questionPath, 'utf8');
    // Converti il markdown in HTML usando marked con configurazione ottimizzata
    if (questionContent) {
      // Prima puliamo il contenuto markdown per ridurre le righe vuote eccessive
      const cleanedContent = questionContent
        .replace(/\n\s*\n\s*\n/g, '\n\n')  // Riduce multiple righe vuote a massimo due
        .replace(/^\s*\n+/, '')             // Rimuove righe vuote all'inizio
        .replace(/\n+\s*$/, '');            // Rimuove righe vuote alla fine

      // Configura marked per preservare i line breaks ma senza eccessi
      marked.setOptions({
        breaks: false,  // Non convertire singoli line break in <br>
        gfm: true,      // Abilita GitHub Flavored Markdown
      });
      questionHtml = await marked(cleanedContent);
    }
  }
} catch (error) {
  console.warn(`Could not read question file for initiative ${initiative.id}:`, error);
}

// Always use the official URL with the initiative ID for signing
const officialUrl = `https://firmereferendum.giustizia.it/referendum/open/dettaglio-open/${initiative.id}`;
const title = String(initiative.titolo || 'Iniziativa');
const description = String(initiative.descrizioneBreve || initiative.descrizione || initiative.titolo || 'Descrizione non disponibile');
const fullTitle = `${title} - Referendum e Iniziative Popolari`;
const signingActive = isSigningActive(initiative);
const ogImage = `og-${initiative.id}.png`;

// Funzione per normalizzare il baseUrl
const normalizeBaseUrl = (baseUrl: string): string => {
  if (baseUrl === '/') return '';
  return baseUrl.replace(/\/$/, '');
};

const normalizedBaseUrl = normalizeBaseUrl(import.meta.env.BASE_URL || '/');

const currentUrl = (() => {
  const site = Astro.site?.toString() || '';
  const baseUrl = import.meta.env.BASE_URL || '/';

  // Rimuovi trailing slash dal site
  const cleanSite = site.replace(/\/$/, '');

  // Gestisci il base URL: se Ã¨ solo '/', non aggiungerlo
  let cleanBase = '';
  if (baseUrl !== '/') {
    cleanBase = baseUrl.startsWith('/') ? baseUrl : `/${baseUrl}`;
    cleanBase = cleanBase.endsWith('/') ? cleanBase : `${cleanBase}/`;
  } else {
    cleanBase = '/';
  }

  return `${cleanSite}${cleanBase}initiative/${initiative.id}/`;
})();
---

<Layout title={fullTitle} description={description} ogImage={ogImage} ogType="article">
  <div class="min-h-screen bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
        <a href={import.meta.env.BASE_URL} class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium">
          <ArrowLeftIcon className="w-5 h-5 mr-2" />
          Torna alle iniziative
        </a>

        <!-- Menu Hamburger -->
        <HamburgerMenuNative baseUrl={import.meta.env.BASE_URL} />
      </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-3 sm:px-4 lg:px-8 py-4 sm:py-8">
      <!-- Header -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-8 mb-6 sm:mb-8">
        <!-- Badges -->
        <div class="flex flex-wrap gap-2 sm:gap-3 mb-4 sm:mb-6">
          <a
            href={`${normalizedBaseUrl}/?categoria=${encodeURIComponent(initiative.idDecCatIniziativa?.nome || '')}`}
            class="inline-flex items-center px-2 py-1 sm:px-3 sm:py-1 rounded-full text-xs sm:text-sm font-medium bg-blue-100 text-blue-800 hover:bg-blue-200 transition-colors duration-200 cursor-pointer"
          >
            <TagIcon className="w-3 h-3 sm:w-4 sm:h-4 mr-1" />
            {initiative.idDecCatIniziativa?.nome || 'AMBIENTE'}
          </a>
          <span class={`inline-flex items-center px-2 py-1 sm:px-3 sm:py-1 rounded-full text-xs sm:text-sm font-medium ${
            initiative.idDecStatoIniziativa?.nome?.includes('RACCOLTA')
              ? 'bg-green-100 text-green-800'
              : 'bg-gray-100 text-gray-800'
          }`}>
            <ClockIcon className="w-3 h-3 sm:w-4 sm:h-4 mr-1" />
            {initiative.idDecStatoIniziativa?.nome || 'IN RACCOLTA FIRME'}
          </span>
          <span class={`inline-flex items-center px-2 py-1 sm:px-3 sm:py-1 rounded-full text-xs sm:text-sm font-medium ${
            initiative.idDecTipoIniziativa?.id === 1
              ? 'bg-red-100 text-red-800'
              : 'bg-purple-100 text-purple-800'
          }`}>
            <TagIcon className="w-3 h-3 sm:w-4 sm:h-4 mr-1" />
            {initiative.idDecTipoIniziativa?.id === 4
              ? 'Legge di iniziativa popolare'
              : initiative.idDecTipoIniziativa?.id === 1
              ? 'Referendum abrogativo'
              : 'Tipologia non specificata'}
          </span>
        </div>

        <!-- Title -->
        <h1 class="text-xl sm:text-2xl font-bold text-gray-900 mb-4 sm:mb-6 leading-tight">
          {initiative.titolo}
        </h1>

        <!-- CTA Buttons -->
        <div class="mb-4 sm:mb-6 flex flex-row gap-3 sm:gap-4">
          {signingActive ? (
            <a
              href={officialUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="flex-1 sm:flex-none inline-flex items-center justify-center px-4 sm:px-6 py-2.5 sm:py-3 bg-blue-600 text-white text-sm sm:text-base font-semibold rounded-lg hover:bg-blue-700 transition-colors duration-200"
            >
              Sostieni
              <ArrowTopRightOnSquareIcon className="w-4 h-4 sm:w-5 sm:h-5 ml-2" />
            </a>
          ) : (
            <a
              href={officialUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="flex-1 sm:flex-none inline-flex items-center justify-center px-4 sm:px-6 py-2.5 sm:py-3 bg-gray-400 text-gray-200 text-sm sm:text-base font-semibold rounded-lg hover:bg-gray-500 transition-colors duration-200"
            >
              Raccolta terminata
              <ArrowTopRightOnSquareIcon className="w-4 h-4 sm:w-5 sm:h-5 ml-2" />
            </a>
          )}

          <!-- Tasto Condividi -->
          <div class="flex-1 sm:flex-none">
            <ShareButton
              url={currentUrl}
              title={title}
              description={description}
              client:load
            />
          </div>
        </div>


        <!-- Stats -->
        <div class="grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-6 mb-8">
          <div class="flex items-center p-3 sm:p-4 bg-gray-50 rounded-lg">
            <CalendarIcon className="w-6 h-6 sm:w-8 sm:h-8 text-gray-600 mr-2 sm:mr-4 flex-shrink-0" />
            <div class="min-w-0">
              <p class="text-xs sm:text-sm text-gray-600">Data apertura</p>
              <p class="text-sm sm:text-lg font-semibold text-gray-900 leading-tight">{formatDate(initiative.dataApertura)}</p>
            </div>
          </div>

          {initiative.dataFineRaccolta && (
            <div class="flex items-center p-3 sm:p-4 bg-orange-50 rounded-lg">
              <CalendarIcon className="w-6 h-6 sm:w-8 sm:h-8 text-orange-600 mr-2 sm:mr-4 flex-shrink-0" />
              <div class="min-w-0">
                <p class="text-xs sm:text-sm text-orange-600">Scadenza</p>
                <p class="text-sm sm:text-lg font-semibold text-orange-900 leading-tight">{formatDate(initiative.dataFineRaccolta)}</p>
              </div>
            </div>
          )}

          {initiative.sostenitori !== undefined && (
            <div class="flex items-center p-3 sm:p-4 bg-gray-50 rounded-lg">
              <UserGroupIcon className="w-6 h-6 sm:w-8 sm:h-8 text-gray-600 mr-2 sm:mr-4 flex-shrink-0" />
              <div class="min-w-0">
                <p class="text-xs sm:text-sm text-gray-600">Sostenitori</p>
                <p class="text-sm sm:text-lg font-semibold text-gray-900 leading-tight">{formatNumber(initiative.sostenitori)}</p>
              </div>
            </div>
          )}

          {initiative.quorum !== undefined && (
            <div class="flex items-center p-3 sm:p-4 bg-blue-50 rounded-lg">
              <FlagIcon className="w-6 h-6 sm:w-8 sm:h-8 text-blue-600 mr-2 sm:mr-4 flex-shrink-0" />
              <div class="min-w-0">
                <p class="text-xs sm:text-sm text-blue-600">Quorum</p>
                <p class="text-sm sm:text-lg font-semibold text-blue-900 leading-tight">{formatNumber(initiative.quorum)}</p>
              </div>
            </div>
          )}
        </div>

        <!-- Note about signatures -->
        <p class="text-sm text-gray-500 mt-4">
          <strong>Nota bene:</strong> le firme visualizzate qui si riferiscono esclusivamente a quelle raccolte online; il quorum finale si raggiunge sommando queste a quelle tradizionali. Qui sono <strong>aggiornate una volta al giorno</strong>.
        </p>
      </div>

      <!-- Description -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-8 mb-6 sm:mb-8">
        <h2 class="text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4">Descrizione</h2>

        {initiative.descrizione ? (
          <div class="w-full">
            <p class="text-gray-700 leading-relaxed whitespace-pre-line">
              {initiative.descrizione}
            </p>
          </div>
        ) : initiative.descrizioneBreve ? (
          <div class="w-full">
            <p class="text-gray-700 leading-relaxed">
              {initiative.descrizioneBreve}
            </p>
          </div>
        ) : (
          <p class="text-gray-500 italic">
            Descrizione non disponibile per questa iniziativa.
          </p>
        )}
      </div>

      {hasTimeLineData && (
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-8 mb-6 sm:mb-8">
          <h2 class="text-lg sm:text-xl font-semibold text-gray-900 mb-4">Timeline sostenitori</h2>
          <div id="chart" class="w-full overflow-x-auto"></div>
          <script type="module" define:vars={{ timelineData: initiativeTimeLine }}>            import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

            const fmtIt = new Intl.NumberFormat("it-IT").format;
            const fmtDateTooltip = d => d.toLocaleDateString("it-IT", {
              day: "numeric",
              month: "long",
              year: "numeric"
            });

            let lastTick = null;
            const customTickFormat = (d) => {
              if (!(d instanceof Date) || isNaN(d)) {
                return "";
              }
              const currentTick = d.toLocaleDateString("it-IT", { day: "2-digit", month: "short", year: "2-digit" });
              if (currentTick === lastTick) {
                return "";
              }
              lastTick = currentTick;
              return currentTick;
            };

            function draw() {
              const data = timelineData
                .map(d => ({ ...d, data: new Date(d.data) }))
                .sort((a, b) => a.data - b.data);

              if (data.length === 0) return;

              const container = document.getElementById("chart");
              if (!container) return;

              const { width } = container.getBoundingClientRect();
              lastTick = null;

              const chart = Plot.plot({
                width,
                marginLeft: 60,
                marginBottom: 70,
                x: {
                  type: "utc",
                  label: "Data",
                  tickFormat: customTickFormat,
                  insetLeft: 20,
                  tickRotate: 45
                },
                y: {
                  label: "Sostenitori",
                  tickFormat: fmtIt,
                  ticks: 5,
                  zero: true,
                  grid: true
                },
                marks: [
                  Plot.line(data, { x: "data", y: "sostenitori", stroke: "#1f77b4", strokeWidth: 2 }),
                  Plot.ruleX(data, Plot.pointerX({ x: "data", y: "sostenitori", stroke: "rgba(0,0,0,0.2)" })),
                  Plot.dot(data, Plot.pointerX({ x: "data", y: "sostenitori", stroke: "#1f77b4", fill: "white", r: 3, strokeWidth: 1.5 })),
                  Plot.text(data, Plot.pointerX({
                    px: "data",
                    py: "sostenitori",
                    dy: -15,
                    dx: 5,
                    text: (d) => `Data: ${fmtDateTooltip(d.data)}
Sostenitori: ${fmtIt(d.sostenitori)}`,
                    textAlign: "left",
                    lineAnchor: "bottom",
                    fill: "#333",
                    stroke: "white",
                    strokeWidth: 5
                  }))
                ]
              });

              container.innerHTML = "";
              container.append(chart);
            }

            const chartContainer = document.getElementById("chart");
            if (chartContainer) {
              draw();
              new ResizeObserver(draw).observe(chartContainer);
            }
          </script>
        </div>
      )}

      <!-- Iniziative Correlate -->
      {relatedInitiatives.length > 0 && (
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-8 mb-6 sm:mb-8">
          <h2 class="text-lg sm:text-xl font-semibold text-gray-900 mb-4">Iniziative correlate</h2>
          <p class="text-sm text-gray-600 mb-4">
            Altre iniziative della categoria "{initiative.idDecCatIniziativa?.nome}" con raccolta firme attiva che potrebbero interessarti:
          </p>
          <ul class="space-y-3">
            {relatedInitiatives.map((relatedInitiative) => (
              <li class="flex items-start">
                <span class="inline-block w-2 h-2 rounded-full bg-blue-500 mt-2 mr-3 flex-shrink-0"></span>
                <a
                  href={`${normalizedBaseUrl}/initiative/${relatedInitiative.id}/`}
                  class="text-blue-600 hover:text-blue-800 hover:underline transition-colors duration-200 leading-relaxed"
                >
                  {relatedInitiative.titolo}
                </a>
              </li>
            ))}
          </ul>
        </div>
      )}

      <!-- Question/Quesito -->
      {questionHtml && (
        <div class="bg-gray-50 rounded-lg shadow-sm border border-gray-300 border-l-4 border-l-blue-500 p-4 sm:p-8 mb-6 sm:mb-8">
          <h2 class="text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4">Quesito</h2>
          <div class="w-full">
            <div class="text-gray-800 leading-relaxed font-serif text-sm sm:text-base prose prose-sm max-w-none
                        prose-p:text-gray-800 prose-p:mb-3 prose-p:leading-relaxed
                        prose-h1:text-lg prose-h1:font-bold prose-h1:mb-3 prose-h1:mt-6 prose-h1:text-gray-900
                        prose-h2:text-base prose-h2:font-semibold prose-h2:mb-2 prose-h2:mt-4 prose-h2:text-gray-900
                        prose-h3:text-sm prose-h3:font-medium prose-h3:mb-2 prose-h3:mt-3 prose-h3:text-gray-800
                        prose-ul:pl-6 prose-li:mb-1 prose-li:leading-relaxed
                        prose-ol:pl-6 prose-ol:mb-3
                        prose-strong:text-gray-900 prose-strong:font-semibold
                        prose-em:italic prose-em:text-gray-700
                        [&>*:first-child]:mt-0 [&>*:last-child]:mb-0
                        [&_p+p]:mt-3 [&_h1+p]:mt-2 [&_h2+p]:mt-2 [&_h3+p]:mt-1"
                 set:html={questionHtml}></div>
          </div>
        </div>
      )}

      <!-- Links -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-8">
        <h2 class="text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4">Link utili</h2>
        <div class="space-y-3">
          {normalizeUrl(initiative.sito) && (
            <a
              href={normalizeUrl(initiative.sito)}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
            >
              <LinkIcon className="w-5 h-5 mr-2" />
              Sito web dell'iniziativa
              <ArrowTopRightOnSquareIcon className="w-4 h-4 ml-1" />
            </a>
          )}
          <a
            href={officialUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
          >
            <LinkIcon className="w-5 h-5 mr-2" />
            Pagina ufficiale su firmereferendum.giustizia.it
            <ArrowTopRightOnSquareIcon className="w-4 h-4 ml-1" />
          </a>
        </div>
      </div>
    </main>

    <!-- Footer -->
    <Footer />
  </div>
</Layout>
