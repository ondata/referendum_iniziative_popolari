---
import '../styles/global.css';
import { homeContent } from '../config/content';

export interface Props {
  title: string;
  description?: string;
  ogImage?: string;
  ogType?: string;
}

const {
  title,
  description = homeContent.subtitle,
  ogImage = "og-default.png",
  ogType = "website"
} = Astro.props;

const ogImageUrl = (() => {
  const site = Astro.site?.toString() || '';
  const baseUrl = import.meta.env.BASE_URL || '/';
  const cleanSite = site.replace(/\/$/, '');

  // Gestisci correttamente il baseUrl per dev e produzione
  let cleanBase = '';
  if (baseUrl !== '/') {
    cleanBase = baseUrl.startsWith('/') ? baseUrl : `/${baseUrl}`;
    cleanBase = cleanBase.endsWith('/') ? cleanBase : `${cleanBase}/`;
  } else {
    cleanBase = '/';
  }

  return `${cleanSite}${cleanBase}og-images/${ogImage}`;
})();
---

<!DOCTYPE html>
<html lang="it">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Favicon - comprehensive implementation for maximum compatibility -->
    <!-- Traditional favicon for root fallback -->
    <link rel="icon" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon.ico`;
    })()} />
    
    <!-- Modern SVG favicon -->
    <link rel="icon" type="image/svg+xml" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-optimized.svg`;
    })()} />
    
    <!-- PNG favicons for different sizes -->
    <link rel="icon" type="image/png" sizes="16x16" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-16.png`;
    })()} />
    <link rel="icon" type="image/png" sizes="32x32" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-32.png`;
    })()} />
    <link rel="icon" type="image/png" sizes="48x48" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-48.png`;
    })()} />
    
    <!-- Apple Touch Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-180.png`;
    })()} />
    
    <!-- Android Chrome icon -->
    <link rel="icon" type="image/png" sizes="192x192" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-192.png`;
    })()} />
    
    <!-- Large icon for high-resolution displays -->
    <link rel="icon" type="image/png" sizes="512x512" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/favicon-512.png`;
    })()} />
    
    <!-- Web App Manifest -->
    <link rel="manifest" href={(() => {
      const baseUrl = import.meta.env.BASE_URL || '/';
      const cleanBase = baseUrl === '/' ? '' : baseUrl.replace(/\/$/, '');
      return `${cleanBase}/manifest.json`;
    })()} />
    
    <title>{title}</title>

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={ogType} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={title} />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImageUrl} />
    <meta name="twitter:image:alt" content={title} />
  </head>
  <body class="min-h-screen bg-gray-50">
    <slot />
  </body>
</html>
